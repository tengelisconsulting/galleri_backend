version: "3.4"
services:
  # pipes
  in_pipe:
    image: tengelisconsulting/pipes_py
    network_mode: "host"
    restart: "unless-stopped"
    environment:
      - LOG_LEVEL
      - IN_PORT=${EZ_INPUT_PORT_A}
      - DEALER_PORT=${EZ_INPUT_PORT_B}
  worker_pipe:
    image: tengelisconsulting/pipes_py
    network_mode: "host"
    restart: "unless-stopped"
    environment:
      - LOG_LEVEL
      - IN_PORT=${EZ_WORKER_PORT_A}
      - DEALER_PORT=${EZ_WORKER_PORT_B}
  broker_pipe:
    image: tengelisconsulting/pipes_py
    network_mode: "host"
    restart: "unless-stopped"
    environment:
      - LOG_LEVEL
      - IN_PORT=${EZ_BROKER_PORT_A}
      - BROADCAST_PORT=${EZ_BROKER_BROADCAST_PORT}

  broker:
    image: tengelisconsulting/broker_py
    network_mode: "host"
    restart: "unless-stopped"
    environment:
      - BROKER_BROADCAST_PORT=${EZ_BROKER_BROADCAST_PORT}
      - BROKER_PIPE_HOST=${EZ_PIPE_HOST}
      - BROKER_PIPE_IN_PORT=${EZ_BROKER_PORT_A}
      - IN_PIPE_HOST=${EZ_PIPE_HOST}
      - IN_PIPE_PORT=${EZ_INPUT_PORT_B}
      - LOG_LEVEL
      - WORKER_PIPE_HOST=${EZ_PIPE_HOST}
      - WORKER_PIPE_PORT=${EZ_WORKER_PORT_B}



  gateway:
    image: galleri/gateway:latest
    network_mode: "host"
    environment:
      - EZ_INPUT_HOST=${EZ_PIPE_HOST}
      - EZ_INPUT_PORT=${EZ_INPUT_PORT_A}

      - GATEWAY_PORT
      - PUB_PGST_HOST
      - PUB_PGST_PORT
      - SYS_PGST_HOST
      - SYS_PGST_PORT
      - LUA_CODE_CACHE
      - HTTP_ZMQ_HOST
      - HTTP_ZMQ_HTTP_PORT
      - OBJ_BUFFER_SIZE
      - OBJ_MAX_SIZE
      - OBJ_STORAGE_HOST
      - OBJ_STORAGE_BUCKET
    restart: unless-stopped
    volumes:
      - "/etc/localtime:/etc/localtime:ro"

  pub_postgrest:
    image: tengelisconsulting/postgrest:latest
    network_mode: "host"
    environment:
      # postgrest
      - PGST_USER=${PUB_PGST_USER}
      - PGST_PASS=${PUB_PGST_PASS}
      - PGST_PORT=${PUB_PGST_PORT}
      - PGST_SCHEMA=${PUB_PGST_SCHEMA}
      - PGST_ANON_ROLE=${PUB_PGST_ANON_ROLE}
      - PGST_POOL=${PUB_PGST_POOL}
      - PGST_POOL_TIMEOUT=${PUB_PGST_POOL_TIMEOUT}
      # postgres
      - PGHOST
      - PGPORT
      - PGDB
    restart: unless-stopped
    volumes:
      - "/etc/localtime:/etc/localtime:ro"

  sys_postgrest:
    image: tengelisconsulting/postgrest:latest
    network_mode: "host"
    environment:
      # postgrest
      - PGST_USER=${SYS_PGST_USER}
      - PGST_PASS=${SYS_PGST_PASS}
      - PGST_PORT=${SYS_PGST_PORT}
      - PGST_SCHEMA=${SYS_PGST_SCHEMA}
      - PGST_ANON_ROLE=${SYS_PGST_ANON_ROLE}
      - PGST_POOL=${SYS_PGST_POOL}
      - PGST_POOL_TIMEOUT=${SYS_PGST_POOL_TIMEOUT}
      # postgres
      - PGHOST
      - PGPORT
      - PGDB
    restart: unless-stopped
    volumes:
      - "/etc/localtime:/etc/localtime:ro"

  token_worker:
    image: galleri/auth_worker:latest
    network_mode: "host"
    environment:
      # generic
      - SERVICE_NAME=TOKEN
      - LOG_LEVEL
      - LISTEN_HOST=${EZ_PIPE_HOST}
      - PORT=${EZ_WORKER_PORT_A}
      # impl
      - SESSION_TIMEOUT_S
    restart: "unless-stopped"
    volumes:
      - ${PRIV_KEY_FILE}:/app/priv_key:ro
      - "/etc/localtime:/etc/localtime:ro"

  aws_worker:
    image: galleri/aws_worker:latest
    network_mode: "host"
    environment:
      # generic
      - SERVICE_NAME=AWS
      - LOG_LEVEL
      - LISTEN_HOST=${EZ_PIPE_HOST}
      - PORT=${EZ_WORKER_PORT_A}
      # specific
      - AWS_ACCESS_KEY_ID
      - AWS_GET_URL_LIFETIME_S
      - AWS_SECRET_KEY
      - OBJ_STORAGE_BUCKET
      - OBJ_STORAGE_REGION
    restart: "unless-stopped"
    volumes:
      - "/etc/localtime:/etc/localtime:ro"
